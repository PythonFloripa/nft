openapi: 3.0.2
info:
  version: 1.0.0
  title: NFT Python Floripa
  termsOfService: https://example.com/terms/
  contact:
    email: contact@example.com
    url: http://example.com/contact
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: https://redocly.github.io/openapi-template/logo.png
  description: |
    NFT API Documentation.
servers:
  - url: https://pop.cloudman.pro
tags:
  - name: Cadastro
    description: Example echo operations
  - name: Certificado
    description: Operations about user
externalDocs:
  description: Find out how to create a GitHub repo for your OpenAPI definition.
  url: https://github.com/Rebilly/generator-openapi-repo
paths:
  /pop/Auth-pop:
    post:
      operationId: create_user
      tags:
        - Cadastro
      summary: Create a new user
      deprecated: false
      description: Create a new user
      requestBody:
        description: User object that needs to be added to the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid user supplied
        '409':
          description: User already exists
  /pop/OrgAdmin-pop:
    post:
      operationId: create_certificate
      tags:
        - Certificado
      summary: Create a new certificate
      deprecated: false
      description: Create a new certificate
      requestBody:
        description: Certificate object that needs to be added to the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCertificate'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCreated'
            application/xml:
              schema:
                $ref: '#/components/schemas/CertificateCreated'
        '409':
          description: Item n√£o encontrado na DynamoDB
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://example.com/api/oauth/dialog
          scopes:
            read:users: read users info
            write:users: modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
  schemas:
    User:
      properties:
        name:
          description: User Name
          type: string
          minLength: 4
          example: John Smith
    Email:
      properties:
        email:
          description: User email address
          type: string
          format: test
          example: john.smith@example.com
    CreateUser:
      type: object
      title: Create User
      description: Create a new user
      required:
        - name
        - email
        - action
        - otp
      allOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Email'
      properties:
        action:
          type: string
          enum:
            - verify
            - register
            - process-link
          format: test
          description: Action to be performed
        otp:
          type: string
          example: '123456'
          format: test
          description: OTP code
    Certificate:
      properties:
        orgName:
          description: Organization name
          type: string
          format: test
          example: Example Inc.
        eventName:
          description: Event name
          type: string
          format: test
          example: Example Event
    CreateCertificate:
      type: object
      title: Create User
      description: Create a new user
      required:
        - orgName
        - eventName
      allOf:
        - $ref: '#/components/schemas/Certificate'
      properties:
        action:
          type: string
          enum:
            - StartCreateCerts
          format: text
          description: Action to be performed
    CertificateCreated:
      properties:
        attendeeCounter:
          description: Number of attendees
          type: integer
          format: int32
